name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Setup and cache Nix
      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      # Cache Nix store to speed up builds
      - name: Cache Nix store
        uses: DeterminateSystems/magic-nix-cache-action@v2

      # Cache Rust build artifacts
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      # Enter the Nix development environment and build
      - name: Build with Nix
        run: |
          # Build Tailwind CSS
          nix develop --command tailwindcss -i ./tailwind.css -o ./assets/tailwind.css
          
          # Build Dioxus App
          nix develop --command dx build --release
        
      - name: Add 404.html for client-side routing
        run: cp target/dx/radar-graph/release/web/public/index.html target/dx/radar-graph/release/web/public/404.html

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'target/dx/radar-graph/release/web/public'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4